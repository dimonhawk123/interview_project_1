{"version":3,"sources":["smoothscroll.js","background.js","menu-mobole.js","section.js","slider.js"],"names":["polyfill","w","window","d","document","documentElement","style","__forceSmoothScrollPolyfill__","userAgent","Element","HTMLElement","SCROLL_TIME","original","scroll","scrollTo","scrollBy","elementScroll","prototype","scrollElement","scrollIntoView","now","performance","bind","Date","ROUNDING_TOLERANCE","navigator","RegExp","join","test","undefined","arguments","shouldBailOut","smoothScroll","call","body","left","scrollX","pageXOffset","top","scrollY","pageYOffset","_typeof","this","scrollLeft","scrollTop","SyntaxError","behavior","scrollableParent","el","isScrollableY","hasScrollableSpace","canOverflow","isScrollableX","parentNode","host","findScrollableParent","parentRects","getBoundingClientRect","clientRects","getComputedStyle","position","x","y","firstArg","TypeError","axis","clientHeight","scrollHeight","clientWidth","scrollWidth","overflowValue","step","context","value","currentX","currentY","k","elapsed","startTime","Math","cos","PI","startX","startY","method","scrollable","requestAnimationFrame","exports","module","refs","querySelectorAll","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","addEventListener","event","preventDefault","anchorId","target","getAttribute","querySelector","active","menuStyle","onclick","classList","toggle","arr_about","Array","from","children","links_about","about","arr","links","_i","_Array$from","length","link","fontWeight","map","item","id","opacity","visibility","i","arr_edu","links_edu","leftBtn","rightBtn","elemCount","slider","visibleElem","iter","countPath","width","margin","flag","resetSlider","marginLeft","size","switcher","setInterval"],"mappings":"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","file":"scripts.js","sourcesContent":["/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n\n}());\n","//нет возможности использовать scrollIntoView\r\n//потому что не поддерживается некоторыми браузерами \r\n\r\n//используем полифил Smooth Scroll behavior polyfill\r\n\r\n//получаем все элементы, при помощи которым можем перейти к якорю\r\nvar refs = document.querySelectorAll('.background .menu__link, .wrapper__button.button');\r\n\r\n//на каждый полученный элемент вешаем обработчик события клика мыши \r\nfor (let ref of refs) {\r\n    ref.addEventListener('click', function(event) {\r\n        event.preventDefault();\r\n        let anchorId = event.target.getAttribute('href');\r\n        let anchor = document.querySelector(anchorId);\r\n        anchor.scrollIntoView({behavior: 'smooth'});\r\n    });\r\n}","// открытие/закрытие меню в версии сайта с шириной меньше 700px\r\nlet active = document.querySelector('.menu-mobile');\r\nlet menuStyle = document.querySelector('.menu');\r\nactive.onclick = function() {\r\n    menuStyle.classList.toggle('active');\r\n}","//-------------------------------------------------\r\n//получаем необходимы блоки с личной информацией\r\nlet arr_about = Array.from(document.querySelector('.section_theme_about .block').children);\r\n//получаем ссылки, с помощью которых будем выбирать какой блок отображать \r\nlet links_about = document.querySelectorAll('.section_theme_about .menu__link');\r\n\r\nfunction about(arr, links, event) {   \r\n    //проверяем какая ссылка нажата и делаем её жирной, \r\n    //остальные оставляем обычными  \r\n    for (let link of Array.from(links)) {        \r\n        if (event.target == link) {\r\n            event.target.style.fontWeight = 'bold';\r\n        } else {\r\n            link.style.fontWeight = 'normal';\r\n        }\r\n    }        \r\n    //перебираем и отображаем необходимый блок с информацией\r\n    arr.map(function(item){        \r\n        if (item.id == ('#' + event.target.id)) {\r\n            item.style.opacity = 1;    \r\n            item.style.visibility = 'visible';        \r\n        } else {\r\n            item.style.opacity = 0;        \r\n            item.style.visibility = 'hidden';    \r\n        }        \r\n    })    \r\n} \r\n// на каждую ссылку в секции \"обо мне\" вешаем обработчик клика мыши\r\nfor(let i = 0; i < links_about.length; i++) {\r\n    links_about[i].addEventListener('click', about.bind(null, arr_about, links_about));\r\n}\r\n//-------------------------------------------------\r\n// аналогично с секцией \"образование\"\r\nlet arr_edu = Array.from(document.querySelector('.section_theme_edu .block').children);\r\nlet links_edu = document.querySelectorAll('.section_theme_edu .menu__link');\r\n\r\nfor(let i = 0; i < links_edu.length; i++) {\r\n    links_edu[i].addEventListener('click', about.bind(null, arr_edu, links_edu));\r\n}","// левая и правая кнопки слайдера\r\nlet leftBtn = document.querySelector('.slider__btn_left');\r\nlet rightBtn = document.querySelector('.slider__btn_right');\r\n// количество \"навыков\" \r\nlet elemCount = document.querySelector('.slider__list').children.length;\r\nlet slider = document.querySelector('.slider__list');\r\n// число отображаемых \"навыков\" \r\nlet visibleElem = 4;\r\n// число итераций - сдвигов слайдера\r\nlet iter = 0;\r\n// интервал времени \r\nlet interval;\r\n// число, на которое увеличится ширина бегущей линии\r\nlet countPath = 0;\r\nlet width =  document.querySelector('.path__inside');\r\n// величина сдвига слайдера\r\nlet margin = -300;\r\n// проверка на ширину текущей страницы \r\nlet flag = true;\r\n\r\n//перевод слайдера в начальное положение\r\nfunction resetSlider() {\r\n    iter = 0;\r\n    countPath = 0;\r\n    slider.style.marginLeft = 0 + 'px';\r\n}\r\n\r\n// определение ширины обертки и изменеие величины сдвига слайдера \r\nfunction size() {\r\n    if ((document.querySelector('.wrapper').clientWidth == 1024) && flag) {\r\n        margin = -236;\r\n        resetSlider();\r\n        flag = false;\r\n    } \r\n    if ((document.querySelector('.wrapper').clientWidth != 1024) && !flag) {\r\n        margin = -300;\r\n        resetSlider();\r\n        flag = true;\r\n    }     \r\n}\r\n// определение ширины обертки и изменеие величины сдвига слайдера при первой загрузке страницы\r\nsize();\r\n// обработчик изменеия ширины страницы\r\nwindow.addEventListener('resize', size);\r\n\r\n// сдвиг слайдера на одно деление вправо \r\nfunction switcher() {\r\n    iter++;\r\n    // проверка на то, чтобы слайдер всегда остображал заданное число элементов\r\n    // и автоматически переходил в начало \r\n    if(iter > (elemCount - visibleElem)) {\r\n        iter = 0;\r\n    }\r\n    slider.style.marginLeft = iter * margin + 'px';\r\n}\r\n\r\n// реализация движения бегущей линии и перевод её в начало\r\nfunction pathWidth() {\r\n    countPath++;\r\n    // при достижении линией граничной ширины, происходит перевод линии в начало,\r\n    // а также автоматическое перемещение слайдера вправо\r\n    if (countPath == 301) {\r\n        countPath = 0;   \r\n        switcher();     \r\n    }\r\n    width.style.width = (100/300) * countPath + '%';\r\n}\r\n\r\n// перемещение слайдера влево при помощи левой кнопки\r\nleftBtn.onclick = function() {    \r\n    countPath = 0;\r\n    iter--;\r\n    // при достижении крайнего левого положения, \r\n    // слайдер перейдёт в конец\r\n    if (iter < 0) {\r\n        iter = elemCount - visibleElem;\r\n    }\r\n    slider.style.marginLeft = iter * margin + 'px';    \r\n}\r\n\r\n// перемещение слайдера влево при помощи правой кнопки\r\nrightBtn.onclick = function() {\r\n    countPath = 0;\r\n    switcher();\r\n}\r\n// интервал времени в 20 мс\r\n// каждые 20 мс выполняется функция по увеличению ширины бегущей линии\r\ninterval = setInterval(pathWidth, 20);"]}